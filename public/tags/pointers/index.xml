<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pointers on Sorush Khajepor - Numerical programming and app development</title>
    <link>https://iamsorush.com/tags/pointers/</link>
    <description>Recent content in Pointers on Sorush Khajepor - Numerical programming and app development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 14 Feb 2021 22:10:20 +0100</lastBuildDate><atom:link href="https://iamsorush.com/tags/pointers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What is a C&#43;&#43; weak pointer and where is it used? smart pointers part III</title>
      <link>https://iamsorush.com/posts/weak-pointer-cpp/</link>
      <pubDate>Sun, 14 Feb 2021 22:10:20 +0100</pubDate>
      
      <guid>https://iamsorush.com/posts/weak-pointer-cpp/</guid>
      <description>Weak pointers (weak_ptr) are smart pointers that observe other objects but don&amp;rsquo;t take ownership of them. Here, I explain how they are implemented and why we need them with examples.</description>
    </item>
    
    <item>
      <title>What is a C&#43;&#43; shared pointer and how is it used? smart pointers part II</title>
      <link>https://iamsorush.com/posts/shared-pointer-cpp/</link>
      <pubDate>Sun, 07 Feb 2021 18:19:00 +0100</pubDate>
      
      <guid>https://iamsorush.com/posts/shared-pointer-cpp/</guid>
      <description>Shared pointers (shared_ptr) are smart pointers which ameliorate memory management. Here, I explain them with examples and discuss their usage and performance.</description>
    </item>
    
    <item>
      <title>What is a C&#43;&#43; unique pointer and how is it used? smart pointers part I</title>
      <link>https://iamsorush.com/posts/unique-pointers-cpp/</link>
      <pubDate>Sun, 31 Jan 2021 19:10:20 +0100</pubDate>
      
      <guid>https://iamsorush.com/posts/unique-pointers-cpp/</guid>
      <description>Unique pointers (unique_ptr) manage a pointer&amp;rsquo;s allocated memory. Here, I define them and explain the operations, passing to / returning from a function, and performance. A factory example is also demonstrated.</description>
    </item>
    
    <item>
      <title>How to use C&#43;&#43; raw pointers properly?</title>
      <link>https://iamsorush.com/posts/how-use-cpp-raw-pointer/</link>
      <pubDate>Sat, 22 Feb 2020 20:05:39 +0000</pubDate>
      
      <guid>https://iamsorush.com/posts/how-use-cpp-raw-pointer/</guid>
      <description>A pointer is an 8-byte type on a 64-bit machine that holds the memory address of a target object. Here, I  mention the most useful characteristics of pointers with examples.</description>
    </item>
    
  </channel>
</rss>
